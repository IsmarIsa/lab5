import json
import re
import requests
import sys
import os

# API-–∫–ª—é—á –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ ATAIX
API_KEY = "–í–ê–®_API"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è GET-–∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API
def get_request(endpoint):
    url = f"https://api.ataix.kz{endpoint}"
    headers = {"accept": "application/json", "X-API-Key": API_KEY}
    response = requests.get(url, headers=headers, timeout=20)
    return response.json() if response.status_code == 200 else f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}, {response.text}"

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –≤–∞–ª—é—Ç
def find_name_currencies(text, word):
    words = re.findall(r'\b\w+\b', text)
    return {re.sub(r'[^a-zA-Z–∞-—è–ê-–Ø]', '', words[i + 1]) for i in range(len(words) - 1) if words[i] == word}

name_currencies = find_name_currencies(json.dumps(get_request("/api/symbols")), "base")
print("üìä –î–æ—Å—Ç—É–ø–Ω—ã–π –±–∞–ª–∞–Ω—Å –Ω–∞ –±–∏—Ä–∂–µ –≤ —Ç–æ–∫–µ–Ω–∞—Ö USDT:")
for currency in name_currencies:
    balance_info = get_request(f"/api/user/balances/{currency}")
    balance = re.search(r"'available':\\s*'([\\d.]+)'", str(balance_info))
    if balance:
        print(f"üîπ {currency}: {balance.group(1)} USDT")

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—Ä
def find_symbols(text, word):
    words = re.findall(r'\b\w+(?:/\w+)?\b', text)
    pair_sym = []
    for i in range(len(words) - 1):
        if words[i] == word:
            pair_sym.append(words[i + 1])
    return pair_sym

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ —Ü–µ–Ω
def find_prices(text, word):
    return re.findall(rf'{word}[\s\W]*([-+]?\d*\.\d+|\d+)', text)

currencies_less_0_6, price_less_0_6_list = [], {}
symbols = find_symbols(json.dumps(get_request("/api/symbols")), "symbol")
price = find_prices(json.dumps(get_request("/api/prices")), "lastTrade")
print("\nüìâ –¢–æ—Ä–≥–æ–≤—ã–µ –ø–∞—Ä—ã —Å USDT, –≥–¥–µ —Ü–µ–Ω–∞ ‚â§ 0.6 USDT:")
for i in range(len(symbols)):
    if "USDT" in symbols[i] and float(price[i]) <= 0.6:
        print(f"üîπ {symbols[i]}: {price[i]} USDT")
        currencies_less_0_6.append(symbols[i])
        price_less_0_6_list[symbols[i]] = price[i]

while True:
    current_cur = input("üõí –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ—Ä–≥–æ–≤—É—é –ø–∞—Ä—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, TRX, IMX, 1INCH) –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞: ").upper()
    if current_cur == "EXIT":
        sys.exit()
    if current_cur + "/USDT" in currencies_less_0_6:
        price_less_0_6 = price_less_0_6_list[current_cur + "/USDT"]
        break
    print("‚ö† –¢–∞–∫–æ–π —Ç–æ—Ä–≥–æ–≤–æ–π –ø–∞—Ä—ã –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

print(f"\nüìå –í—ã –≤—ã–±—Ä–∞–ª–∏: {current_cur} –ø–æ —Ü–µ–Ω–µ {price_less_0_6} USDT")
price_levels = {"-2%": round(float(price_less_0_6) * 0.98, 4), "-5%": round(float(price_less_0_6) * 0.95, 4), "-8%": round(float(price_less_0_6) * 0.92, 4)}
print("üîΩ –ë—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã —Ç—Ä–∏ –æ—Ä–¥–µ—Ä–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É {}:".format(current_cur))
for level, price in price_levels.items():
    print(f"  {level}: {price} USDT")

while input("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (–≤–≤–µ–¥–∏—Ç–µ 'yes' –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏–ª–∏ 'exit' –¥–ª—è –æ—Ç–º–µ–Ω—ã): ").lower() != "yes":
    sys.exit()

# –§—É–Ω–∫—Ü–∏—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –æ—Ä–¥–µ—Ä–æ–≤
def post_orders(symbol, price):
    url = "https://api.ataix.kz/api/orders"
    headers = {"accept": "application/json", "X-API-Key": API_KEY, "Content-Type": "application/json"}
    data = {"symbol": symbol, "side": "buy", "type": "limit", "quantity": 1, "price": price}
    response = requests.post(url, headers=headers, json=data, timeout=20)
    return response.json()

orders_list = [post_orders(current_cur + "/USDT", price) for price in price_levels.values()]
filename = "orders_data.json"
orders = []
if os.path.exists(filename):
    with open(filename, "r") as file:
        try:
            orders = json.load(file)
        except json.JSONDecodeError:
            pass
for order in orders_list:
    if isinstance(order, dict) and "result" in order:
        orders.append({
            "orderID": order["result"].get("orderID", "UNKNOWN"),
            "price": order["result"].get("price", "UNKNOWN"),
            "quantity": order["result"].get("quantity", "UNKNOWN"),
            "symbol": order["result"].get("symbol", "UNKNOWN"),
            "created": order["result"].get("created", "UNKNOWN"),
            "status": order["result"].get("status", "NEW")
        })
with open(filename, "w") as file:
    json.dump(orders, file, indent=4)
print(f"‚úÖ –û—Ä–¥–µ—Ä–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã! –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {filename}. –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Å–µ—Ç–∏—Ç–µ ATAIX, –≤–∫–ª–∞–¥–∫–∞ '–ú–æ–∏ –æ—Ä–¥–µ—Ä–∞'.")
